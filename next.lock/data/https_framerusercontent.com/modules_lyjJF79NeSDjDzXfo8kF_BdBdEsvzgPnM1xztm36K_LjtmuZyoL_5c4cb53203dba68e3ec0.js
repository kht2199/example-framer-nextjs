import { useRandomID } from "https://framer.com/m/framer/randomID.js@0.1.0"; import * as React from "react"; import { motion , addPropertyControls , cx , useVariantState , useAddVariantProps , useActiveVariantCallback , withCSS , LayoutGroup , ControlType , Image as Image1 , Text as Text1 } from "framer"; const enabledGestures = {veWQMrnXH: {hover: true, pressed: true}}; const cycleOrder = ["veWQMrnXH"]; const variantClassNames = {veWQMrnXH: "framer-v-1v8p2"}; const humanReadableVariantMap = {}; const transitions = {default: {type: "spring", ease: [0.44, 0, 0.56, 1], duration: 0.3, delay: 0, stiffness: 500, damping: 60, mass: 1}}; const Component = React.forwardRef(function ({ style, className, layoutId, width, height, variant: outerVariant = "veWQMrnXH", image: bKHF9VYel = new URL("assets/512/i3T8RX0B1Mt3MLTFK555zqvC7Y.jpg", import.meta.url).href, title: eXrzp_UJS = "beach name", country: bcjpR0lAq = "country", tap: QKZnMdgBP, ...restProps }, ref) { const outerVariantId = humanReadableVariantMap[outerVariant]; const variant = outerVariantId || outerVariant; const { variants, baseVariant, gestureVariant, classNames, transition, setVariant, setGestureState } = useVariantState({defaultVariant: "veWQMrnXH", variant, transitions, variantClassNames, enabledGestures, cycleOrder}); const { activeVariantCallback, delay } = useActiveVariantCallback(baseVariant); const onTap1v8p2 = activeVariantCallback(async (...args) => { if (QKZnMdgBP) { const res = await QKZnMdgBP(...args); if (res === false) { return false }; }; }); const variantProps = React.useMemo(() => { return ({"veWQMrnXH-hover": {TbLOJYaIb: {center: "x"}}, "veWQMrnXH-pressed": {TbLOJYaIb: {center: "x"}}}); }, []); const addVariantProps = useAddVariantProps(baseVariant, gestureVariant, variantProps); const defaultLayoutId = useRandomID(); return (React.createElement(LayoutGroup, {id: layoutId !== null && layoutId !== void 0 ? layoutId : defaultLayoutId}, React.createElement(motion.div, {initial: variant, animate: variants, className: cx("framer-7a7eK", classNames), style: {display: "contents", pointerEvents: "auto"}, onHoverStart: () => { return setGestureState({isHovered: true}); }, onHoverEnd: () => { return setGestureState({isHovered: false}); }, onTapStart: () => { return setGestureState({isPressed: true}); }, onTap: () => { return setGestureState({isPressed: false}); }, onTapCancel: () => { return setGestureState({isPressed: false}); }}, React.createElement(motion.div, Object.assign({}, restProps, {style: {borderBottomLeftRadius: 15, borderBottomRightRadius: 15, borderTopRightRadius: 15, borderTopLeftRadius: 15, rotate: 0, ...style}, layoutId: "veWQMrnXH", className: cx("framer-1v8p2", className), background: null, "data-highlight": true, "data-framer-name": "Variant 1", onTap: onTap1v8p2, transition, ref}, addVariantProps("veWQMrnXH")), React.createElement(Image1, Object.assign({style: {rotate: 0}, layoutId: "KqWKIXUi0", className: "framer-3zp0no", background: {src: bKHF9VYel, pixelWidth: 2318, pixelHeight: 3478, intrinsicWidth: 2318, intrinsicHeight: 3478, fit: "fill"}, "data-framer-name": "image", transition}, addVariantProps("KqWKIXUi0"))), React.createElement(motion.div, Object.assign({style: {backgroundColor: "rgba(0, 0, 0, 0.3)", rotate: 0}, layoutId: "xv6RlOI9F", className: "framer-w96wta", "data-framer-name": "overlay", variants: {"veWQMrnXH-hover": {backgroundColor: "rgba(0, 0, 0, 0.5)"}}, transition}, addVariantProps("xv6RlOI9F"))), React.createElement(Text1, Object.assign({style: {opacity: 0, rotate: 0}, withExternalLayout: true, verticalAlignment: "top", __fromCanvasComponent: true, fonts: ["GF;DM Sans-500"], center: "x", layoutId: "TbLOJYaIb", className: "framer-2pctua", rawHTML: "<div style='font-size: 0; line-height: 0; tab-size: 4; white-space: inherit; word-wrap: inherit'><div style='direction: ltr; font-size: 0'><span style='-webkit-text-fill-color: hsl(0, 0%, 87%); font-family: &quot;DM Sans&quot;, sans-serif; font-size: 17px; font-style: normal; font-weight: 500; letter-spacing: 0px; line-height: 1.2'>country</span><br></div></div>", text: bcjpR0lAq, variants: {"veWQMrnXH-hover": {opacity: 1}, "veWQMrnXH-pressed": {opacity: 1}}, transition}, addVariantProps("TbLOJYaIb"))), React.createElement(Text1, Object.assign({style: {rotate: 0}, withExternalLayout: true, verticalAlignment: "top", __fromCanvasComponent: true, fonts: ["GF;DM Sans-500"], center: "x", layoutId: "e3x2J08qP", className: "framer-u9psvp", rawHTML: "<div style='font-size: 0; line-height: 0; tab-size: 4; white-space: inherit; word-wrap: inherit'><div style='direction: ltr; font-size: 0'><span style='-webkit-text-fill-color: #FFFFFF; font-family: &quot;DM Sans&quot;, sans-serif; font-size: 30px; font-style: normal; font-weight: 500; letter-spacing: 0px; line-height: 1.2'>beach name</span><br></div></div>", text: eXrzp_UJS, transition}, addVariantProps("e3x2J08qP"))))))); }); const css = [".framer-7a7eK [data-border=\"true\"]::after { content: \"\"; border-width: var(--border-top-width, 0) var(--border-right-width, 0) var(--border-bottom-width, 0) var(--border-left-width, 0); border-color: var(--border-color, none); border-style: var(--border-style, none); width: 100%; height: 100%; position: absolute; box-sizing: border-box; left: 0; top: 0; border-radius: inherit; pointer-events: none;}", ".framer-7a7eK .framer-1v8p2 {position: relative; cursor: pointer; overflow: hidden; width: 342px; height: 462px;}", ".framer-7a7eK .framer-3zp0no {position: absolute; overflow: visible; right: 0px; bottom: 0px; left: 0px; top: 0px; flex: none;}", ".framer-7a7eK .framer-w96wta {position: absolute; overflow: visible; right: 0px; bottom: 0px; left: 0px; top: 0px; flex: none;}", ".framer-7a7eK .framer-2pctua {position: absolute; overflow: visible; width: auto; height: auto; bottom: 201px; left: 50%; flex: none; white-space: pre;}", ".framer-7a7eK .framer-u9psvp {position: absolute; overflow: visible; width: auto; height: auto; left: 50%; top: 195px; flex: none; white-space: pre;}", ".framer-7a7eK.framer-v-1v8p2.hover .framer-3zp0no {width: auto; height: 524px; right: -23px; bottom: auto; left: -23px; top: -31px; flex: none;}", ".framer-7a7eK.framer-v-1v8p2.hover .framer-2pctua {width: auto; height: auto; right: auto; bottom: 211px; left: 50%; top: auto; flex: none; white-space: pre;}", ".framer-7a7eK.framer-v-1v8p2.pressed .framer-2pctua {width: auto; height: auto; right: auto; bottom: 211px; left: 50%; top: auto; flex: none; white-space: pre;}"]; const FramerLjtmuZyoL = withCSS(Component, css); export default FramerLjtmuZyoL; FramerLjtmuZyoL.displayName = "Card"; FramerLjtmuZyoL.defaultProps = {width: 342, height: 462}; addPropertyControls(FramerLjtmuZyoL, {bKHF9VYel: {type: ControlType.Image, title: "Image", __defaultAssetReference: "i3T8RX0B1Mt3MLTFK555zqvC7Y.jpg"}, eXrzp_UJS: {type: ControlType.String, title: "Title", defaultValue: "beach name"}, bcjpR0lAq: {type: ControlType.String, title: "Country", defaultValue: "country"}, QKZnMdgBP: {type: ControlType.EventHandler, title: "Tap"}}); export const __FramerMetadata__ = {exports: {default: {type: "reactComponent", slots: [], annotations: {framerCanvasComponentVariantDetails: "{\"propertyName\": \"variant\", \"data\": {\"default\": {\"layout\": [\"fixed\", \"fixed\"]}, \"wxA6lj7TK\": {\"layout\": [\"fixed\", \"fixed\"]}, \"VdSqDx4fB\": {\"layout\": [\"fixed\", \"fixed\"]}}}", framerIntrinsicWidth: "342", framerSupportedLayoutHeight: "any", framerSupportedLayoutWidth: "any", framerIntrinsicHeight: "462", framerVariables: "{\"bKHF9VYel\": \"image\", \"eXrzp_UJS\": \"title\", \"bcjpR0lAq\": \"country\", \"QKZnMdgBP\": \"tap\"}"}}}}; 